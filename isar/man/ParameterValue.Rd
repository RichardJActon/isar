% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ParameterValue.R
\name{ParameterValue}
\alias{ParameterValue}
\title{An R6 object for representing ParameterValue
A ParameterValue represents the instance value of a \code{[ProtocolParameter]}, used in a Process.}
\description{
An R6 object for representing ParameterValue
A ParameterValue represents the instance value of a \code{[ProtocolParameter]}, used in a Process.

An R6 object for representing ParameterValue
A ParameterValue represents the instance value of a \code{[ProtocolParameter]}, used in a Process.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{category}}{A link to the relevant \code{[ProtocolParameter]} that the value is set for.}

\item{\code{value}}{The value of the parameter.}

\item{\code{unit}}{The qualifying unit classifier, if the value is numeric.}

\item{\code{comments}}{Comments associated with instances of this class.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ParameterValue-new}{\code{ParameterValue$new()}}
\item \href{#method-ParameterValue-check_unit}{\code{ParameterValue$check_unit()}}
\item \href{#method-ParameterValue-set_unit}{\code{ParameterValue$set_unit()}}
\item \href{#method-ParameterValue-check_comments}{\code{ParameterValue$check_comments()}}
\item \href{#method-ParameterValue-set_comments}{\code{ParameterValue$set_comments()}}
\item \href{#method-ParameterValue-to_list}{\code{ParameterValue$to_list()}}
\item \href{#method-ParameterValue-from_list}{\code{ParameterValue$from_list()}}
\item \href{#method-ParameterValue-get_id}{\code{ParameterValue$get_id()}}
\item \href{#method-ParameterValue-set_id}{\code{ParameterValue$set_id()}}
\item \href{#method-ParameterValue-clone}{\code{ParameterValue$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-new"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$new(category = NULL, value = NULL, unit = NULL, comments = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{category}}{A link to the relevant \code{[ProtocolParameter]} that the value is set for.}

\item{\code{value}}{The value of the parameter.}

\item{\code{unit}}{The qualifying unit classifier, if the value is numeric.}

\item{\code{comments}}{Comments associated with instances of this class.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
New \code{[ParameterValue]} object
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-check_unit"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-check_unit}{}}}
\subsection{Method \code{check_unit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$check_unit(unit)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{unit}}{a \code{[Unit]} object}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
check if unit is a \code{[Unit]} object
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-set_unit"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-set_unit}{}}}
\subsection{Method \code{set_unit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$set_unit(unit)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{unit}}{a \code{[Unit]} object}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
set unit if input is valid
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-check_comments"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-check_comments}{}}}
\subsection{Method \code{check_comments()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$check_comments(comments)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comments}}{comments}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
checks if comments are a named list of character vectors
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-set_comments"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-set_comments}{}}}
\subsection{Method \code{set_comments()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$set_comments(comments)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comments}}{a list of comments}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Sets comments if they are in a valid format
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$to_list(ld = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ld}}{logical json-ld}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
generate an R list representation translatable to JSON
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-from_list"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-from_list}{}}}
\subsection{Method \code{from_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$from_list(lst)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lst}}{an \code{[Person]} object serialized to a list}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Make \code{[Person]} from list
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-get_id"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-get_id}{}}}
\subsection{Method \code{get_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$get_id()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Get the uuid of this object
}

\subsection{Returns}{
a uuid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-set_id"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-set_id}{}}}
\subsection{Method \code{set_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$set_id(id = uuid::UUIDgenerate(), suffix = character())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{a uuid}

\item{\code{suffix}}{a human readable suffix}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
set the uuid of this object
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
