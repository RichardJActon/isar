% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ParameterValue.R
\name{ParameterValue}
\alias{ParameterValue}
\title{An R6 object for representing ParameterValue
A ParameterValue represents the instance value of a \link{ProtocolParameter}, used in a Process.}
\description{
An R6 object for representing ParameterValue
A ParameterValue represents the instance value of a \link{ProtocolParameter}, used in a Process.

An R6 object for representing ParameterValue
A ParameterValue represents the instance value of a \link{ProtocolParameter}, used in a Process.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{category}}{A link to the relevant \link{ProtocolParameter} that the value is set for.}

\item{\code{value}}{The value of the parameter.}

\item{\code{unit}}{The qualifying unit classifier, if the value is numeric.}

\item{\code{comments}}{Comments associated with instances of this class.}

\item{\code{@id}}{identifier}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{@id}}{identifier}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ParameterValue-new}{\code{ParameterValue$new()}}
\item \href{#method-ParameterValue-check_unit}{\code{ParameterValue$check_unit()}}
\item \href{#method-ParameterValue-set_unit}{\code{ParameterValue$set_unit()}}
\item \href{#method-ParameterValue-check_comments}{\code{ParameterValue$check_comments()}}
\item \href{#method-ParameterValue-set_comments}{\code{ParameterValue$set_comments()}}
\item \href{#method-ParameterValue-add_comment}{\code{ParameterValue$add_comment()}}
\item \href{#method-ParameterValue-set_valid_unit}{\code{ParameterValue$set_valid_unit()}}
\item \href{#method-ParameterValue-set_valid_category}{\code{ParameterValue$set_valid_category()}}
\item \href{#method-ParameterValue-to_table}{\code{ParameterValue$to_table()}}
\item \href{#method-ParameterValue-to_list}{\code{ParameterValue$to_list()}}
\item \href{#method-ParameterValue-from_list}{\code{ParameterValue$from_list()}}
\item \href{#method-ParameterValue-get_value_in_units}{\code{ParameterValue$get_value_in_units()}}
\item \href{#method-ParameterValue-print}{\code{ParameterValue$print()}}
\item \href{#method-ParameterValue-clone}{\code{ParameterValue$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-new"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$new(
  category = NULL,
  value = NULL,
  unit = NULL,
  ontology_source_references = NULL,
  unit_references = NULL,
  protocol_parameters = NULL,
  comments = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{category}}{A link to the relevant \link{ProtocolParameter} that the value is set for.}

\item{\code{value}}{The value of the parameter.}

\item{\code{unit}}{The qualifying unit classifier, if the value is numeric.}

\item{\code{comments}}{Comments associated with instances of this class.}

\item{\code{@id}}{identifier}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
New \link{ParameterValue} object
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-check_unit"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-check_unit}{}}}
\subsection{Method \code{check_unit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$check_unit(unit)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{unit}}{a \link{Unit} object}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
check if unit is a \link{Unit} object
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-set_unit"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-set_unit}{}}}
\subsection{Method \code{set_unit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$set_unit(unit)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{unit}}{a \link{Unit} object}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
set unit if input is valid
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-check_comments"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-check_comments}{}}}
\subsection{Method \code{check_comments()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$check_comments(comments)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comments}}{comments}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
checks if comments are a named list of character vectors
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-set_comments"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-set_comments}{}}}
\subsection{Method \code{set_comments()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$set_comments(comments)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comments}}{a list of comments}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Sets comments if they are in a valid format
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-add_comment"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-add_comment}{}}}
\subsection{Method \code{add_comment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$add_comment(comment)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{comment}}{a list of comments}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Add comment if it is in a valid format
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-set_valid_unit"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-set_valid_unit}{}}}
\subsection{Method \code{set_valid_unit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$set_valid_unit(lst)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{term}}{the term of the unit}

\item{\code{term_accession}}{the accession of the ontology term of the unit}

\item{\code{term_source}}{the name of the source of the ontology term}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Set the unit as a valid ontology term
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-set_valid_category"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-set_valid_category}{}}}
\subsection{Method \code{set_valid_category()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$set_valid_category(category)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-to_table"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-to_table}{}}}
\subsection{Method \code{to_table()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$to_table()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$to_list(ld = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ld}}{logical json-ld}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
generate an R list representation translatable to JSON
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-from_list"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-from_list}{}}}
\subsection{Method \code{from_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$from_list(lst, recursive = TRUE, json = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lst}}{an \link{Person} object serialized to a list}

\item{\code{recursive}}{call to_list methods of any objects within this object (default TRUE)}

\item{\code{json}}{json  (default TRUE)}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Make \link{Person} from list
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-get_value_in_units"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-get_value_in_units}{}}}
\subsection{Method \code{get_value_in_units()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$get_value_in_units()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Get the value and unit of this parameter value as a combined string
}

\subsection{Returns}{
a string
#' @details
#' set the uuid of this object
#' @param id a uuid
#' @param suffix a human readable suffix
set_id = function(id = uuid::UUIDgenerate(), suffix = character()) {
private$id <- generate_id(id, suffix)
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-print"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$print()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Pretty prints \link{ParameterValue} objects
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ParameterValue-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ParameterValue-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ParameterValue$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
